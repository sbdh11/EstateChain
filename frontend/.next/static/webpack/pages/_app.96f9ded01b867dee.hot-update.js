"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/hooks/useContract.ts":
/*!**********************************!*\
  !*** ./src/hooks/useContract.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useContract: function() { return /* binding */ useContract; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/react */ \"../node_modules/@chakra-ui/react/dist/esm/index.mjs\");\n/* harmony import */ var _services_contracts_abis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../services/contracts/abis */ \"./src/services/contracts/abis.ts\");\n/* harmony import */ var _config_contracts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../config/contracts */ \"./src/config/contracts.ts\");\n\n\n\n\n\nconst useContract = ()=>{\n    const toast = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.useToast)();\n    const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        isConnected: false,\n        account: null,\n        chainId: null,\n        provider: null,\n        signer: null,\n        propertyToken: null,\n        propertyValuation: null,\n        escrow: null\n    });\n    const initializeContracts = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (provider, signer, chainId)=>{\n        try {\n            const addresses = _config_contracts__WEBPACK_IMPORTED_MODULE_2__.CONTRACT_ADDRESSES[chainId];\n            if (!addresses) {\n                throw new Error(\"Please connect to a supported network (Hardhat local or Sepolia testnet)\");\n            }\n            console.log(\"Initializing contracts with addresses:\", addresses);\n            const propertyToken = new ethers__WEBPACK_IMPORTED_MODULE_4__.Contract(addresses.propertyToken, _services_contracts_abis__WEBPACK_IMPORTED_MODULE_1__.PropertyTokenABI, signer);\n            const propertyValuation = new ethers__WEBPACK_IMPORTED_MODULE_4__.Contract(addresses.propertyValuation, _services_contracts_abis__WEBPACK_IMPORTED_MODULE_1__.PropertyValuationABI, signer);\n            return {\n                propertyToken,\n                propertyValuation\n            };\n        } catch (error) {\n            console.error(\"Error initializing contracts:\", error);\n            throw error;\n        }\n    }, []);\n    const connectWallet = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (typeof window.ethereum === \"undefined\") {\n            toast({\n                title: \"Error\",\n                description: \"Please install MetaMask\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true\n            });\n            return;\n        }\n        try {\n            await window.ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.BrowserProvider(window.ethereum);\n            const network = await provider.getNetwork();\n            const chainId = network.chainId.toString();\n            const signer = await provider.getSigner();\n            const account = await signer.getAddress();\n            const contracts = await initializeContracts(provider, signer, chainId);\n            setState({\n                isConnected: true,\n                account,\n                chainId,\n                provider,\n                signer,\n                ...contracts,\n                escrow: null\n            });\n            console.log(\"Wallet connected successfully:\", {\n                account,\n                chainId\n            });\n        } catch (error) {\n            console.error(\"Error connecting wallet:\", error);\n            toast({\n                title: \"Error\",\n                description: error.message || \"Failed to connect wallet\",\n                status: \"error\",\n                duration: 5000,\n                isClosable: true\n            });\n        }\n    }, [\n        toast,\n        initializeContracts\n    ]);\n    const disconnect = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        setState({\n            isConnected: false,\n            account: null,\n            chainId: null,\n            provider: null,\n            signer: null,\n            propertyToken: null,\n            propertyValuation: null,\n            escrow: null\n        });\n    }, []);\n    // Initialize provider and contracts\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const init = async ()=>{\n            if (typeof window.ethereum === \"undefined\") {\n                toast({\n                    title: \"Error\",\n                    description: \"Please install MetaMask\",\n                    status: \"error\",\n                    duration: 5000,\n                    isClosable: true\n                });\n                return;\n            }\n            try {\n                const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.BrowserProvider(window.ethereum);\n                const network = await provider.getNetwork();\n                const chainId = network.chainId.toString();\n                const signer = await provider.getSigner();\n                const accounts = await provider.listAccounts();\n                const account = accounts.length > 0 ? accounts[0].address : null;\n                if (account) {\n                    const contracts = await initializeContracts(provider, signer, chainId);\n                    setState({\n                        isConnected: true,\n                        account,\n                        chainId,\n                        provider,\n                        signer,\n                        ...contracts,\n                        escrow: null\n                    });\n                }\n            } catch (error) {\n                console.error(\"Error in initialization:\", error);\n            }\n        };\n        init();\n    }, [\n        toast,\n        initializeContracts\n    ]);\n    // Handle account changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const handleAccountsChanged = async (accounts)=>{\n            if (accounts.length > 0) {\n                try {\n                    const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.BrowserProvider(window.ethereum);\n                    const signer = await provider.getSigner();\n                    const network = await provider.getNetwork();\n                    const chainId = network.chainId.toString();\n                    const contracts = await initializeContracts(provider, signer, chainId);\n                    setState((prev)=>({\n                            ...prev,\n                            isConnected: true,\n                            account: accounts[0],\n                            provider,\n                            signer,\n                            ...contracts\n                        }));\n                } catch (error) {\n                    console.error(\"Error updating contracts:\", error);\n                }\n            } else {\n                setState((prev)=>({\n                        ...prev,\n                        isConnected: false,\n                        account: null,\n                        propertyToken: null,\n                        propertyValuation: null,\n                        escrow: null\n                    }));\n            }\n        };\n        if (typeof window.ethereum !== \"undefined\") {\n            window.ethereum.on(\"accountsChanged\", handleAccountsChanged);\n        }\n        return ()=>{\n            if (typeof window.ethereum !== \"undefined\") {\n                window.ethereum.removeListener(\"accountsChanged\", handleAccountsChanged);\n            }\n        };\n    }, [\n        initializeContracts\n    ]);\n    // Handle chain changes\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const handleChainChanged = async (chainId)=>{\n            try {\n                const provider = new ethers__WEBPACK_IMPORTED_MODULE_4__.BrowserProvider(window.ethereum);\n                const signer = await provider.getSigner();\n                const contracts = await initializeContracts(provider, signer, parseInt(chainId, 16).toString());\n                setState((prev)=>({\n                        ...prev,\n                        chainId: parseInt(chainId, 16).toString(),\n                        provider,\n                        signer,\n                        ...contracts\n                    }));\n            } catch (error) {\n                console.error(\"Error updating contracts after chain change:\", error);\n                toast({\n                    title: \"Network Error\",\n                    description: error.message || \"Please connect to a supported network\",\n                    status: \"error\",\n                    duration: 5000,\n                    isClosable: true\n                });\n            }\n        };\n        if (typeof window.ethereum !== \"undefined\") {\n            window.ethereum.on(\"chainChanged\", handleChainChanged);\n        }\n        return ()=>{\n            if (typeof window.ethereum !== \"undefined\") {\n                window.ethereum.removeListener(\"chainChanged\", handleChainChanged);\n            }\n        };\n    }, [\n        initializeContracts,\n        toast\n    ]);\n    return {\n        ...state,\n        connectWallet,\n        disconnect\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/hooks/useContract.ts\n"));

/***/ })

});